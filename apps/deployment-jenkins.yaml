---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jenkins
  template:
    metadata:
      labels:
        name: jenkins
    spec:
      nodeSelector:
        kubernetes.io/hostname: slave1
      serviceAccountName: jenkins2
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: JAVA_OPTS
          value: -Dhudson.model.DirectoryBrowserSupport.CSP=
        ports:
        - name: http
          containerPort: 8080
        - name: slaves
          containerPort: 50000
        volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins-data
      volumes:
      - name: jenkins-data
        nfs:
          server: 100.100.0.10
          path: /nfsdata/jenkins

---
apiVersion: v1
kind: Service
metadata:
    name: jenkins
    labels:
      name: jenkins
spec:
    type: NodePort
    ports:
    - name: http
      port: 8080
      nodePort: 30002
    - name: slaves
      port: 50000
    selector:
      name: jenkins

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins2

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: jenkins2
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: jenkins2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins2
subjects:
  - kind: ServiceAccount
    name: jenkins2
